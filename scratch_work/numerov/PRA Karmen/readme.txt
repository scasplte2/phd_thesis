========================= README.TXT ===============================

ARTICLE INFORMATION:

Journal:    Phys. Rev. A

Authors:   Tijs Karman and Gerrit C. Groenenboom

Title: Cold magnetically-trapped ^2D scandium atoms: II Scattering dynamics

DEPOSIT INFORMATION

Description:
Matlab routines for performing coupled-channels calculations for
collisions of two ^2D state atoms.
Files for the propagation algorithms are from the Supplementary material of J. Chem. Phys., accepted.
For details concerning these algorithms, see NRCC Proceedings, 5, 86 (1979) and J. Chem. Phys., 69, 4678 (1978) for renormalized Numerov,
and from J. Chem. Phys., accepted for the renormalized Airy algorithms.

Total No. of Files: 55
No. of subdirectories: 3

Filenames: README.TXT + the 54 files:
adapt2PermutationSymmetry.m		calculates rectangular matrix that transforms from the primitive basis to the parity and permutation symmetry adapted basis.
airexp1e.m				Airy function propagator helper function.
airexp1.m				Airy function propagator helper function.
airexp1o.m				Airy function propagator helper function.
airexp2e.m				Airy function propagator helper function.
airexp2.m				Airy function propagator helper function.
airexp2o.m				Airy function propagator helper function.
basis_coupledlmax_J.m			Generates coupled basis, truncated by l<=lmax for a single J
basis_coupledlmax.m			Generates coupled basis, truncated by l<=lmax for all J
basis_coupledpablmax_J.m		Generates symmetry adapted coupled basis, truncated by l<=lmax for a single J
basis_coupledpablmax.m			Generates symmetry adapted coupled basis, truncated by l<=lmax for all J
centrifugal.m				Calculates matrix representation of centrifugal term
c_gm.m					Calculates Clebsch-Gordan coefficient
crosssectionsUncoupled.m		Calculates elastic and inelastic cross sections from T matrix
damping.m				Tang-Toennies damping functions (required for long-range potential)
decouple.m				Calculates transformation between coupled and uncoupled functions
decouplePermutationAdapted.m		Calculates transformation between coupled and uncoupled functions, both symmetry adapted.
eenxk.m					Airy function propagator helper function.
eenxkm.m				Airy function propagator helper function.
eightteenj.mat				.mat file containing the precomputed 18-j symbols. generated by generate_18j.sh
ff_3jm.F*				Fortran function for evaluation of 3-jm symbols.
ff_3jm.mexa64*				Fortran-MATLAB interfacing with mex.
ff_6j.F*				Fortran function for evaluation of 6-j symbols.
ff_6j.mexa64*				Fortran-MATLAB interfacing with mex.
ff_9j.F*				Fortran function for evaluation of 9-j symbols.
ff_9j.mexa64*				Fortran-MATLAB interfacing with mex.
ff_dsyev.F*				Fortran function calling LAPACK dsyev for diagonalization of symmetric matrices.
ff_dsyev.mexa64*			Fortran-MATLAB interfacing with mex.
generate_18j.m				Calculates all required 18-j symbols as discussed in the paper.
generate_18j.sh*			Shell script calling generate_18j.m and storing the result in eightteenj.mat
generate_ctabs.m			Generates labels for body-fixed expansion coefficients of the potential
magndip.m				Generates matrix representation of the magnetic dipole-dipole coupling.
matchBoundaryConditions.m		Matches the final Q matrix to the boundary conditions.
morse_eval.m				Evaluate Morse functions (short-range potential)
numDiagHasAtomic.m			Calculate exact atomic states numerically.
numDiagHas.m				Calculate exact asymptotic channel eigen functions.
numerov6.m				Numerov propagator.
optLRgrid2.m				Generates long-range radial grid.
output_fitShortrange2.mat		.mat file containing parameters for the electronic potential.
potentialCoupledMatrixElements.m	Calculate matrix representation of space-fixed expansion of the electronic interaction
potentialSpaceFixedExpansion2.m		Calculate expansion coefficients of space-fixed expansion of the electronic interaction
Qairy.m					Airy propagator main function.
qqcoupled.m				Calculate asymptotic adiabatic states by diagonalizing the quadrupole-quadrupole coupling.
run_field.sh*				Shell script that calls ScSc_field.m and outputs to sub-directory run_field
run_nofield.sh*				Shell script that calls ScSc_nofield.m and outputs to sub-directory run_nofield
ScSc_field.m				Main function to perform scattering calculations including magnetic fields
ScSc_nofield.m				Main function to perform scattering calculations without magnetic fields
ScScW2.m				Function that assembles the W-matrix.
seig.m					Wrapper function for diagonalization. Calls dsyev.
spin_orbit.m				Matrix representation of spin-orbit coupling
transformAdiabats2SFExpansion.m		Calculate transformation between body-fixed and space-fixed expansion coefficients of the electronic interaction.
Xairy.m					Airy function propagator helper function.
Yairy.m					Airy function propagator helper function.
zeeman.m				Calculates matrix representation of the Zeeman interaction.

Sub-Directories:
generate_18j/	contains output of generate_18j.sh (error messages only)
run_field/	contains output of run_field.sh. Output (timings, error messages etc.) in .out, Cross sections are saved in corresponding .mat files.
run_nofield/	contains output of run_nofield.sh. Output (timings, error messages etc.) in .out, Cross sections are saved in corresponding .mat files.

Filetypes: all ASCII and MATLAB .mat files
Special Instructions: See Below
Contact Information:
        Tijs Karman
        Theoretical Chemistry, Institute of Molecules and Materials
        Radboud University Nijmegen
	Heyendaalseweg 135
	6525 AJ Nijmegen, The Netherlands 
         Phone: +31-(0)24-3653037 Email: t.karman@science.ru.nl
-----------------------
Special instructions:

Calculations can be started using the shell scripts run_nofield.sh and run_field.sh,
for the field-free case and for calculations including magnetic fields, respectively.
A detailed explanation of the program structure is given in the paper.
The input is as follows:
run_nofield.sh lmax par perm Emin Emax Esteps Rmax
	lmax	highest partial wave included
	par	parity (-1)^L
	perm	total permutation symmetry. This is the total permutation symmetry, i.e. not the nuclear permutation symmetry, which is discussed in the paper. The difference is a factor (-1)^n_e=-1 for scandium.
	Emin	determines lowest energy as 10^Emin K. so for Emin=-6, the lowest energy is 1 micro Kelvin, for example.
	Emax	determines highest energy as 10^Emax K. so for Emax=-3, the lowest energy is 1 milli Kelvin, for example.
        Esteps  number of energy points in the above specified range.
	Rmax	Largest separation propagated to.

run_field.sh lmax M par perm B Emin Emax Esteps
        lmax    highest partial wave included
	M	value of the space-fixed projection of the total angular momentum.
        par     parity (-1)^L
        perm    total permutation symmetry. This is the total permutation symmetry, i.e. not the nuclear permutation symmetry, which is discussed in the paper. The difference is a factor (-1)^n_e=-1 for scandium.
	B	magnetic field strength is given by 10^B in gauss. so for B=0, this gives a field of 1 gauss.
        Emin    determines lowest energy as 10^Emin K. so for Emin=-6, the lowest energy is 1 micro Kelvin, for example.
        Emax    determines highest energy as 10^Emax K. so for Emax=-3, the lowest energy is 1 milli Kelvin, for example.
	Esteps	number of energy points in the above specified range.

Example output can be found in the sub-directories run_nofield and run_field.
These can be compared to the results of the Born approximation calculation (for low energy),
to validate both programs are running correctly.
