WavePacket is a program package for the numerical simulation of quantum-mechanical wavepacket dynamics for distinguishable particles. This README describes the stable Matlab version 5.2.1 of WavePacket which was released on July 7, 2016. 

1. Installation and execution of the programs
=============================================

To use the program, add the Sources directory to your Matlab source path. For each simulation, you then write an initialization function qm_init(), change the working directory to the directory where this function 
is located, and run

	qm_setup();
	qm_init();
	qm_propa();
	qm_cleanup();

for a propagation that numerically solves the time-dependent Schroedinger equation (TDSE). Replacing qm_propa by qm_bound in the lines above, you can alternatively run a bound state calculation that numerically solves the time-independent Schroedinger equation (TISE). Finally there is also the option to run qm_movie which produces animated graphics visualizing the results of qm_propa and/or qm_bound.

The easiest way to learn how to set up an initialization function qm_init() is by studying the numerous examples found in the Demos directory. As indicated there by the names of the subdirectories, some of those example are for prototyical model Hamiltonians (such as Morse oscillator, spin-boson system) while others are from the field of molecular physics (vibration, rotation, electronic excitation). A thorough description of all of these examples, along with data and graphical output, can be found on the general Wavepacket wiki pages hosted at SourceForge,
	http://sourceforge.net/p/wavepacket/wiki/Home/
where also a lot of numerical details are documented. Furthermore, a detailed user guide and a reference of all variables, functions, parameters can be found on the Wiki pages of the Matlab version,
	http://sourceforge.net/p/wavepacket/matlab/wiki/Home/
Also the further development of the WavePacket software will be centrally administrated through the SourceForge website, providing an SVN repository as well as a ticket service for bug fixes or feature requests arising from the community.

2. Brief description of the files
=================================
	
The Sources directory contains the following files and subdirectories

A. Matlab functions
-------------------

qm_setup.m   - Before WavePacket simulations: set up simulations
qm_propa.m   - Perform wavepacket propagations: solve TDSE
qm_bound.m   - Perform bound state calculations: solve TISE
qm_movie.m   - Visualize results from previous WavePacket calculations (qm_bound or qm_propa)
qm_cleanup.m - After WavePacket simulations: close files and clean up

B. Function packages
--------------------

+dip  - various model functions for dipole moments
+init - initialization tasks; among others for grid representations and Hamiltonian
+ket  - manipulation of quantum states; among others containing various propagators
+math - mathematical utility functions; among others: Hermite/Laguerre polynomials, elliptic functions
+nip  - various model functions for negativ imaginary potentials used to absorb wavefunctions near boundaries
+plot - graphical output functions; among others: surface and contour plots of Wigner representations 
+pot  - various model functions for (real) potential energy
+prj  - various model functions for spatial projections
+util - Matlab utilities; among others handling of multidimensional splines and Taylor series
+wav  - various models for initial wavefunctions

C. Matlab classes
-----------------

@grid_fft      - Fourier based scheme for discrete variable representation
@grid_hermite  - Gauss-Hermite scheme for discrete variable representation
@grid_legendre - Gauss-Legendre scheme for discrete variable representation

Although these DVR schemes come with their native kinetic operators, we added two more kinetic operator, thus illustrating how to set up more complex ones

@kin_jacobi    - Kinetic operator for Jacobi coordinates
@kin_triatomic - Kinetic operator for triatomic molecules using bond coordinates
	
3. Contact
==========

If you have any feedback, questions, suggestions, do not hestitate to contact us. The main maintenance is done by Burkhard Schmidt at Free University Berlin, Germany
	burkhard.schmidt@fu-berlin.de
Alternativelylternatively you can also write to Ulf Lorenz
	ulf@wavepacket.org>.
